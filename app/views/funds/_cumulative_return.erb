<%
  if(@fund.get_fund_graph_data)
      @graphData = @fund.get_fund_graph_data
      if !@graphData["fund"].empty?
      startDate  = @graphData["fund"][0][0]
      endDate    = @graphData["fund"].last[0]
    end
  end
%>
<script type="text/javascript">
  $(document).ready(function() {
    (function basic_time(container) {
      var gwData    = <%=@graphData["gw"].to_json%>;
      var spData    = <%=@graphData["sp"].to_json%>;
      var fundData  = <%=@graphData["fund"].to_json%>;
      var startDate = <%=startDate.to_json%>;
      var endDate   = <%=endDate.to_json%>;

      var d1    = [],
          d2    = [],
          d3    = [],
          data, graph, i, x, o, options;
    <%if !startDate.nil?%>
        var start = (new Date("<%=startDate.year.to_json%>", "<%=(startDate.month - 1).to_json%>", "<%= startDate.day.to_json%>")).valueOf();
        var endDateInMS = (new Date("<%=endDate.year.to_json%>", "<%=(endDate.month - 1).to_json%>", "<%= endDate.day.to_json%>")).valueOf(); 
        <%end%>
    
      for (i = 0; i < fundData.length ; i++) {
        d1.push([fundData[i][2], fundData[i][1]]); 
      }

      for (i = 0; i < gwData.length ; i++) {
        d2.push([gwData[i][2], gwData[i][1]]);
      }

      for (i = 0; i < spData.length ; i++) {
        d3.push([spData[i][2], spData[i][1]]);
      }


      data = [{
          data: d1,
          label: "<%=@fund.f20%>"
      }, {
          data: d2,
          label: "GGHFI"
      }, {
          data: d3,
          label: "S&P500"
      }];

      function ticksFn(n) {
        var tickDate = new Date(n);
        return tickDate.getFullYear();
      }

      function labelFn(label) {
        return label;
      }

      options = {
        colors: ['green', 'blue', 'red'],
        xaxis: {
          noTicks: <%= !endDate.nil? and !startDate.nil? ? endDate.year - startDate.year : 0%>,
          min: start,
          // autoscale: true,
          // autoscaleMargin: 0.05,
          mode: "time",
          labelsAngle: 45,
          tickFormatter: ticksFn
        },
        yaxis: {
          autoscale: true,
          autoscaleMargin: 1
        },
        selection: {
          mode: 'x'
        },
        legend: { 
          position: 's',
          noColumns: 3,
          labelBoxHeight: 2,
          labelBoxWidth: 30,
          labelBoxMargin: 2,
          backgroundOpacity: 0,
          labelBoxBorderColor: "#FFF",
          labelFormatter: labelFn,
          backgroundColor: "#FFF"
        },
        grid : {
          verticalLines: false
        },
        HtmlText: true,
        title: "Cumulative Return " + "<%=startDate.nil? ? '' : startDate.strftime('%b-%y')%>" + " to " + "<%=endDate.nil? ? '' : endDate.strftime('%b-%y')%>"
      };

      function drawGraph(opts) {
        o = Flotr._.extend(Flotr._.clone(options), opts || {});
        return Flotr.draw(container, data, o);
      }

      graph = drawGraph();

      Flotr.EventAdapter.observe(container, "flotr:select", function(area) {
        graph = drawGraph({
            xaxis: {
                min: area.x1,
                max: area.x2,
                mode: "time",
                labelsAngle: 45              
            },
            yaxis: {
                min: area.y1,
                max: area.y2
            }
        });
      });

      Flotr.EventAdapter.observe(container, "flotr:click", function() {
        graph = drawGraph();
      });

    })(document.getElementById("chart_div"));   
  });
</script>